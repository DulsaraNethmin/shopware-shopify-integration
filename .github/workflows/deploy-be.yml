name: Deploy to EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate timestamp tag
        id: tag
        run: echo "tag=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PAT }}

      - name: Create .env file from secret
        run: |
          echo "${{ secrets.ENV_FILE_BASE64 }}" | base64 -d > ./api/.env

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./api
          push: true
          tags: |
            nethmindulsara/shopware-shopify-integration:v1
            nethmindulsara/shopware-shopify-integration:${{ steps.tag.outputs.tag }}
          cache-from: type=registry,ref=nethmindulsara/shopware-shopify-integration:buildcache
          cache-to: type=registry,ref=nethmindulsara/shopware-shopify-integration:buildcache,mode=max

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Create directory for env file if it doesn't exist
            mkdir -p ~/app-config
            
            # Decode and save the .env file
            echo "${{ secrets.ENV_FILE_BASE64 }}" | base64 -d > ~/app-config/.env
            
            # Pull the latest image
            docker pull nethmindulsara/shopware-shopify-integration:${{ steps.tag.outputs.tag }}
            
            # Stop and remove the existing container if it exists
            if [ "$(docker ps -q -f name=go-server)" ]; then
              docker stop go-server
              docker rm go-server
            fi
            
            # Run the new container with .env mounted
            docker run -p 80:8080 -d \
              --network go-network \
              --name go-server \
              -v ~/app-config/.env:/app/.env \
              nethmindulsara/shopware-shopify-integration:${{ steps.tag.outputs.tag }}
            
            # Clean up unused images to free up space
            docker image prune -a -f --filter "until=24h"
            
            # Verify the container is running
            docker ps | grep go-server